[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["frostbyte"]

[tool.ruff]
target-version = "py38"
line-length = 100

# EditorConfig settings
[tool.editorconfig]
# top-most EditorConfig file
root = true

# Unix-style newlines with a newline ending every file
[tool.editorconfig."*"]
end_of_line = "lf"
insert_final_newline = true
charset = "utf-8"
trim_trailing_whitespace = true

# Python
[tool.editorconfig."*.py"]
indent_style = "space"
indent_size = 4

# YAML files
[tool.editorconfig."*.{yml,yaml}"]
indent_style = "space"
indent_size = 2

# Markdown files
[tool.editorconfig."*.md"]
trim_trailing_whitespace = false

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "ANN", # flake8-annotations (type checking)
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate (commented out code)
    "PLC", # pylint - convention
    "PLE", # pylint - error
    "PLW", # pylint - warning
    "RUF", # Ruff-specific rules
    "ICN", # import conventions
]
ignore = [
    "ANN401",  # Dynamically typed expressions (Any) sometimes necessary
    "ANN204",  # Missing return type annotation for special method `__init__`
]

# Allow autofix for all enabled rules (when `--fix` is passed)
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint.isort]
known-first-party = ["frostbyte"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pylint]
max-args = 8

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Ignore unused imports in __init__.py files
"tests/**/*.py" = ["ANN"]  # Ignore missing type annotations in tests

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
